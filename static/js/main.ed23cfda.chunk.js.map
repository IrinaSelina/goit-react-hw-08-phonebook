{"version":3,"sources":["redux/form/form-actions.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js","routes.js","redux/auth/auth-selectors.js","Components/PrivateRoute.js","Components/PublicRoute.js","Components/Navigation.js","Components/AuthNav.js","Components/UserMenu/UserMenu.js","Components/AppBar.js","App.js","redux/form/form-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","addFilter","registerRequest","actions","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","massage","logIn","logOut","getCurrentUser","getState","persistedToken","auth","get","state","user","email","isLogin","connect","isAuthenticated","authSelectors","Component","component","redirectTo","routeProps","render","props","to","restricted","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","exact","style","activeStyle","AuthNav","container","alignItems","avatar","marginRight","name","mapDispatchToProps","operations","selectors","onClick","type","HomeView","lazy","LoginView","ContactsView","RegisterView","App","this","onGetCurrentUser","fallback","path","Routs","authOperations","items","createReducer","payload","filter","id","combineReducers","initialUserState","_","error","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","roodReducer","persistReducer","authReducer","contacts","formReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.ed23cfda.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\nconst fetchContactsRequest = createAction(\"contact/fetchItemsRequest\");\r\nconst fetchContactsSuccess = createAction(\"contact/fetchItemsSuccess\");\r\nconst fetchContactsError = createAction(\"contact/fetchItemsError\");\r\nconst addContactRequest = createAction(\"contact/addItemRequest\");\r\nconst addContactSuccess = createAction(\"contact/addItemSuccess\");\r\nconst addContactError = createAction(\"contact/addItemError\");\r\nconst deleteContactRequest = createAction(\"contact/deleteItemRequest\");\r\nconst deleteContactSuccess = createAction(\"contact/deleteItemSuccess\");\r\nconst deleteContactError = createAction(\"contact/deleteItemError\");\r\n\r\nconst addFilter = createAction(\"contacts/Filter\");\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addFilter,\r\n};\r\n","import axios from \"axios\";\r\nimport actions from \"./auth-actions\";\r\nconst {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} = actions;\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\nconst register = (credentials) => async (dispatch) => {\r\n  dispatch(registerRequest());\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", credentials);\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.massage));\r\n  }\r\n};\r\nconst logIn = (credentials) => async (dispatch) => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const response = await axios.post(\"/users/login\", credentials);\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.massage));\r\n  }\r\n};\r\nconst logOut = () => async (dispatch) => {\r\n  dispatch(logoutRequest());\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.massage));\r\n  }\r\n};\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(getCurrentUserRequest());\r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n    // token.set(response.data.token);\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.massage));\r\n  }\r\n};\r\nexport default { register, logIn, logOut, getCurrentUser };\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","export default {\r\n  home: \"/\",\r\n  register: \"/register\",\r\n  login: \"/login\",\r\n  contacts: \"/contacts\",\r\n};\r\n","const getUser = (state) => state.auth.user;\r\nconst getEmail = (state) => state.auth.user.email;\r\nconst isAuthenticated = (state) => state.auth.isLogin;\r\n\r\nexport default {\r\n  getUser,\r\n  getEmail,\r\n  isAuthenticated,\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport authSelectors from \"../redux/auth/auth-selectors\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport authSelectors from \"../redux/auth/auth-selectors\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport authSelectors from \"../redux/auth/auth-selectors\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: \"#2A363B\",\r\n  },\r\n  activeLink: {\r\n    color: \"#E84A5F\",\r\n  },\r\n};\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n      Главная\r\n    </NavLink>\r\n    {isAuthenticated && (\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Контакты пользователя\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\nNavigation.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: \"#2A363B\",\r\n  },\r\n  activeLink: {\r\n    color: \"#E84A5F\",\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Регистрация\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Логин\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport selectors from \"../../redux/auth/auth-selectors\";\r\nimport operations from \"../../redux/auth/auth-operations\";\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ email, logOut }) => (\r\n  <div style={styles.container}>\r\n    <span style={styles.name}>Welcome, {email}</span>\r\n    <button onClick={logOut} type=\"button\">\r\n      Выйти\r\n    </button>\r\n  </div>\r\n);\r\nconst mapStateToProps = (state) => ({\r\n  email: selectors.getEmail(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  logOut: operations.logOut,\r\n};\r\nUserMenu.propTypes = {\r\n  email: PropTypes.string.isRequired,\r\n  logOut: PropTypes.func.isRequired,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Navigation from \"./Navigation\";\r\nimport AuthNav from \"./AuthNav\";\r\nimport UserMenu from \"./UserMenu/UserMenu\";\r\nimport selectors from \"../redux/auth/auth-selectors\";\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: selectors.isAuthenticated(state),\r\n});\r\nAppBar.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\nexport default connect(mapStateToProps, null)(AppBar);\r\n","import React, { Component, Suspense, lazy } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport authOperations from \"./redux/auth/auth-operations\";\nimport Routs from \"./routes\";\nimport PrivateRoute from \"./Components/PrivateRoute\";\nimport PublicRoute from \"./Components/PublicRoute\";\n\nimport AppBar from \"./Components/AppBar\";\n\nconst HomeView = lazy(() => import(\"./views/HomeView.js\"));\nconst LoginView = lazy(() => import(\"./views/LoginView.js\"));\nconst ContactsView = lazy(() => import(\"./views/ContactsView.js\"));\nconst RegisterView = lazy(() => import(\"./views/RegisterView.js\"));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <>\n        <AppBar />\n        <Suspense fallback={<p>Загружаем...</p>}>\n          <Switch>\n            <PublicRoute exact path={Routs.home} component={HomeView} />\n            <PublicRoute\n              path={Routs.register}\n              component={RegisterView}\n              redirectTo={Routs.contacts}\n              restricted\n            />\n            <PublicRoute\n              path={Routs.login}\n              component={LoginView}\n              redirectTo={Routs.contacts}\n              restricted\n            />\n            <PrivateRoute\n              path={Routs.contacts}\n              component={ContactsView}\n              redirectTo={Routs.login}\n            />\n            <Route component={HomeView} />\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\n// class App extends Component {\n//   componentDidMount() {\n//     this.props.fetchContacts();\n//   }\n//   // componentDidUpdate(prevProps, prevState) {\n//   //   if (this.state.contacts !== prevState.contacts) {\n//   //     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//   //   }\n//   // }\n//   render() {\n//     return (\n//       <Section>\n//         <h1>Phonebook</h1>\n//         <Form />\n//         <h2>Contacts</h2>\n//         <Filter />\n//         <ContactList />\n//       </Section>\n//     );\n//   }\n// }\n// const mapDispatchToProps = (dispatch) => ({\n//   onSubmit: (filter) => dispatch(formActions.addFilter(filter)),\n//   fetchContacts: () => dispatch(formOperations.fetchContacts()),\n// });\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./form-actions\";\r\nconst {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  addFilter,\r\n} = actions;\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (state, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [addFilter]: (state, { payload }) => payload,\r\n});\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./auth-actions\";\r\nconst {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} = actions;\r\nconst initialUserState = {\r\n  name: null,\r\n  email: null,\r\n};\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: (_, { payload }) => payload,\r\n  [loginError]: (_, { payload }) => payload,\r\n  [logoutError]: (_, { payload }) => payload,\r\n  [getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\nconst isLogin = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [logoutSuccess]: () => false,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n});\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  isLogin,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport formReducer from \"./form/form-reducer\";\r\nimport authReducer from \"./auth/auth-reducer\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\nconst roodReducer = combineReducers({\r\n  auth: persistReducer(authPersistConfig, authReducer),\r\n  contacts: formReducer,\r\n\r\n  // contacts: persistReducer(persistConfig, formReducer),\r\n});\r\n// const persistedReducer = persistReducer(persistConfig, roodReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: roodReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store.store}>\n        <PersistGate loading={null} persistor={store.persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}