{"version":3,"sources":["routes.js","redux/auth/auth-selectors.js","Components/PrivateRoute.js","Components/PublicRoute.js","Components/Navigation.js","Components/AuthNav.js","Components/UserMenu/UserMenu.js","Components/NavBar.js","App.js","redux/form/form-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js","redux/form/form-actions.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js"],"names":["state","auth","user","email","isLogin","connect","isAuthenticated","authSelectors","Component","component","redirectTo","routeProps","render","props","to","restricted","exact","className","AuthNav","mapDispatchToProps","logOut","operations","selectors","Button","onClick","type","useStyles","makeStyles","theme","root","flexGrow","menu","justifyContent","classes","AppBar","position","Toolbar","color","HomeView","lazy","LoginView","ContactsView","RegisterView","App","this","onGetCurrentUser","fallback","path","Routs","authOperations","getCurrentUser","fetchContactsSuccess","actions","fetchContactsRequest","addContactSuccess","fetchContactsError","addContactRequest","deleteContactSuccess","addContactError","deleteContactRequest","addFilter","deleteContactError","items","createReducer","payload","filter","id","combineReducers","registerSuccess","registerRequest","registerError","loginSuccess","loginRequest","loginError","logoutSuccess","logoutRequest","logoutError","getCurrentUserSuccess","getCurrentUserRequest","getCurrentUserError","initialUserState","name","_","token","error","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","roodReducer","persistReducer","authReducer","contacts","formReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById","createAction","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","massage","logIn","getState","persistedToken","get"],"mappings":"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","file":"static/js/main.7f5e2db6.chunk.js","sourcesContent":["export default {\r\n  home: \"/\",\r\n  register: \"/register\",\r\n  login: \"/login\",\r\n  contacts: \"/contacts\",\r\n};\r\n","const getUser = (state) => state.auth.user;\r\nconst getEmail = (state) => state.auth.user.email;\r\nconst isAuthenticated = (state) => state.auth.isLogin;\r\n\r\nexport default {\r\n  getUser,\r\n  getEmail,\r\n  isAuthenticated,\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport authSelectors from \"../redux/auth/auth-selectors\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport authSelectors from \"../redux/auth/auth-selectors\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport authSelectors from \"../redux/auth/auth-selectors\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: \"#2A363B\",\r\n  },\r\n};\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    <NavLink to=\"/\" exact className=\"link\">\r\n      Главная\r\n    </NavLink>\r\n    {isAuthenticated && (\r\n      <NavLink to=\"/contacts\" exact className=\"link\">\r\n        Контакты пользователя\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\nNavigation.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink to=\"/register\" exact>\r\n      Регистрация\r\n    </NavLink>\r\n    <NavLink to=\"/login\" exact>\r\n      Логин\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport selectors from \"../../redux/auth/auth-selectors\";\r\nimport operations from \"../../redux/auth/auth-operations\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\nconst UserMenu = ({ email, logOut }) => (\r\n  <div>\r\n    <span>Welcome, {email}</span>\r\n    <Button onClick={logOut} type=\"button\">\r\n      <ExitToAppIcon />\r\n    </Button>\r\n  </div>\r\n);\r\nconst mapStateToProps = (state) => ({\r\n  email: selectors.getEmail(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  logOut: operations.logOut,\r\n};\r\nUserMenu.propTypes = {\r\n  email: PropTypes.string.isRequired,\r\n  logOut: PropTypes.func.isRequired,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Navigation from \"./Navigation\";\r\nimport AuthNav from \"./AuthNav\";\r\nimport UserMenu from \"./UserMenu/UserMenu\";\r\nimport selectors from \"../redux/auth/auth-selectors\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menu: {\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n\r\n// const AppBar = ({ isAuthenticated }) => (\r\n//   <header>\r\n//     <Navigation />\r\n//     {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n//   </header>\r\n// );\r\n// const mapStateToProps = (state) => ({\r\n//   isAuthenticated: selectors.isAuthenticated(state),\r\n// });\r\n// AppBar.propTypes = {\r\n//   isAuthenticated: PropTypes.bool.isRequired,\r\n// };\r\nconst NavBar = ({ isAuthenticated }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.menu} color=\"white\">\r\n          <Navigation color=\"inherit\" />\r\n          {isAuthenticated ? (\r\n            <UserMenu color=\"inherit\" />\r\n          ) : (\r\n            <AuthNav color=\"inherit\" />\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: selectors.isAuthenticated(state),\r\n});\r\nNavBar.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\nexport default connect(mapStateToProps, null)(NavBar);\r\n","import React, { Component, Suspense, lazy } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport authOperations from \"./redux/auth/auth-operations\";\nimport Routs from \"./routes\";\nimport PrivateRoute from \"./Components/PrivateRoute\";\nimport PublicRoute from \"./Components/PublicRoute\";\n\nimport NavBar from \"./Components/NavBar\";\n\nconst HomeView = lazy(() => import(\"./views/HomeView.js\"));\nconst LoginView = lazy(() => import(\"./views/LoginView.js\"));\nconst ContactsView = lazy(() => import(\"./views/ContactsView.js\"));\nconst RegisterView = lazy(() => import(\"./views/RegisterView.js\"));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <>\n        <NavBar />\n        <Suspense fallback={<p>Загружаем...</p>}>\n          <Switch>\n            <PublicRoute exact path={Routs.home} component={HomeView} />\n            <PublicRoute\n              path={Routs.register}\n              component={RegisterView}\n              redirectTo={Routs.contacts}\n              restricted\n            />\n            <PublicRoute\n              path={Routs.login}\n              component={LoginView}\n              redirectTo={Routs.contacts}\n              restricted\n            />\n            <PrivateRoute\n              path={Routs.contacts}\n              component={ContactsView}\n              redirectTo={Routs.login}\n            />\n            <Route component={HomeView} />\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\n// class App extends Component {\n//   componentDidMount() {\n//     this.props.fetchContacts();\n//   }\n//   // componentDidUpdate(prevProps, prevState) {\n//   //   if (this.state.contacts !== prevState.contacts) {\n//   //     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//   //   }\n//   // }\n//   render() {\n//     return (\n//       <Section>\n//         <h1>Phonebook</h1>\n//         <Form />\n//         <h2>Contacts</h2>\n//         <Filter />\n//         <ContactList />\n//       </Section>\n//     );\n//   }\n// }\n// const mapDispatchToProps = (dispatch) => ({\n//   onSubmit: (filter) => dispatch(formActions.addFilter(filter)),\n//   fetchContacts: () => dispatch(formOperations.fetchContacts()),\n// });\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./form-actions\";\r\nconst {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  addFilter,\r\n} = actions;\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (state, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [addFilter]: (state, { payload }) => payload,\r\n});\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./auth-actions\";\r\nconst {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} = actions;\r\nconst initialUserState = {\r\n  name: null,\r\n  email: null,\r\n};\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: (_, { payload }) => payload,\r\n  [loginError]: (_, { payload }) => payload,\r\n  [logoutError]: (_, { payload }) => payload,\r\n  [getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\nconst isLogin = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [logoutSuccess]: () => false,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n});\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  isLogin,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport formReducer from \"./form/form-reducer\";\r\nimport authReducer from \"./auth/auth-reducer\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\nconst roodReducer = combineReducers({\r\n  auth: persistReducer(authPersistConfig, authReducer),\r\n  contacts: formReducer,\r\n\r\n  // contacts: persistReducer(persistConfig, formReducer),\r\n});\r\n// const persistedReducer = persistReducer(persistConfig, roodReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: roodReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n// import \"modern-normalize/modern-normalize.css\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store.store}>\n        <PersistGate loading={null} persistor={store.persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { createAction } from \"@reduxjs/toolkit\";\r\nconst fetchContactsRequest = createAction(\"contact/fetchItemsRequest\");\r\nconst fetchContactsSuccess = createAction(\"contact/fetchItemsSuccess\");\r\nconst fetchContactsError = createAction(\"contact/fetchItemsError\");\r\nconst addContactRequest = createAction(\"contact/addItemRequest\");\r\nconst addContactSuccess = createAction(\"contact/addItemSuccess\");\r\nconst addContactError = createAction(\"contact/addItemError\");\r\nconst deleteContactRequest = createAction(\"contact/deleteItemRequest\");\r\nconst deleteContactSuccess = createAction(\"contact/deleteItemSuccess\");\r\nconst deleteContactError = createAction(\"contact/deleteItemError\");\r\n\r\nconst addFilter = createAction(\"contacts/Filter\");\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addFilter,\r\n};\r\n","import axios from \"axios\";\r\nimport actions from \"./auth-actions\";\r\nconst {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} = actions;\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\nconst register = (credentials) => async (dispatch) => {\r\n  dispatch(registerRequest());\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", credentials);\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.massage));\r\n  }\r\n};\r\nconst logIn = (credentials) => async (dispatch) => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const response = await axios.post(\"/users/login\", credentials);\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.massage));\r\n  }\r\n};\r\nconst logOut = () => async (dispatch) => {\r\n  dispatch(logoutRequest());\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.massage));\r\n  }\r\n};\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(getCurrentUserRequest());\r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n    // token.set(response.data.token);\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.massage));\r\n  }\r\n};\r\nexport default { register, logIn, logOut, getCurrentUser };\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n"],"sourceRoot":""}