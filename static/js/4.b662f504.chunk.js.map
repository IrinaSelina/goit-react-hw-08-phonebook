{"version":3,"sources":["Components/Section/Section.js","../node_modules/@material-ui/icons/Delete.js","redux/form/form-operations.js","redux/form/contacts-selectors.js","Components/Form/Form.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","../node_modules/@material-ui/core/esm/Container/Container.js","views/ContactsView.js"],"names":["Section","children","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","fetchContactsRequest","actions","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","dispatch","a","axios","get","data","message","name","number","items","post","then","catch","error","contactId","delete","getFilter","state","contacts","filter","getAllItems","getVisibleContacts","createSelector","toLowerCase","includes","InputForm","handleChange","e","setState","currentTarget","reset","handelSubmit","preventDefault","props","onSubmit","some","contact","alert","this","FormGroup","InputLabel","htmlFor","Input","id","type","pattern","title","required","onChange","Button","variant","color","size","Component","connect","selectors","formOperations","Card","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","CardContent","_props$component","component","padding","paddingBottom","CardActions","_props$disableSpacing","disableSpacing","spacing","display","alignItems","marginLeft","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","_props$color","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","_props$variantMapping","variantMapping","concat","capitalize","theme","margin","typography","caption","button","overline","srOnly","position","height","width","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","displayInline","displayBlock","useStyles","makeStyles","media","paddingTop","expand","transform","transition","transitions","create","duration","shortest","fontSize","expandOpen","onDelete","map","onClick","formActions","addFilter","target","noValidate","autoComplete","label","Container","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","String","_defineProperty","boxSizing","marginRight","paddingLeft","paddingRight","breakpoints","up","keys","values","reduce","acc","breakpoint","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","ContactsView","fetchContacts"],"mappings":"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","file":"static/js/4.b662f504.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Section.css\";\r\n\r\nconst Section = ({ children }) => <section>{children}</section>;\r\nexport default Section;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import axios from \"axios\";\r\nimport actions from \"./form-actions\";\r\nconst {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} = actions;\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n  // axios\r\n  //   .get(\"/contacts\")\r\n  //   .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n  //   .catch((error) => dispatch(fetchContactsError(error)));\r\n};\r\nconst addContact = (name, number) => (dispatch) => {\r\n  const items = { name, number };\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post(\"/contacts\", items)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((error) => dispatch(addContactError(error.message)));\r\n};\r\nconst deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(deleteContactError(error.message)));\r\n};\r\nexport default { fetchContacts, addContact, deleteContact };\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getAllItems = (state) => state.contacts.items;\r\nconst getVisibleContacts = createSelector(\r\n  [getFilter, getAllItems],\r\n  (filter, contacts) =>\r\n    contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase())\r\n    )\r\n);\r\n// const getVisibleContacts = (state) => {\r\n//   const filter = getFilter(state);\r\n//   const contacts = getAllItems(state);\r\n//   return contacts.filter(({ name }) =>\r\n//     name.toLowerCase().includes(filter.toLowerCase())\r\n//   );\r\n// };\r\n\r\nexport default {\r\n  getFilter,\r\n  getAllItems,\r\n  getVisibleContacts,\r\n};\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport formOperations from \"../../redux/form/form-operations\";\r\nimport selectors from \"../../redux/form/contacts-selectors\";\r\nimport \"./Form.css\";\r\n\r\nclass InputForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.currentTarget.name]: e.currentTarget.value,\r\n    });\r\n  };\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n  handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { contacts, onSubmit } = this.props;\r\n\r\n    contacts.some(\r\n      (contact) => name.toLowerCase() === contact.name.toLowerCase()\r\n    )\r\n      ? alert(`${name} is already in contacts.`)\r\n      : onSubmit(name, number);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handelSubmit}>\r\n        <FormGroup>\r\n          <InputLabel htmlFor=\"name\">\r\n            Name\r\n            <Input\r\n              id=\"name\"\r\n              aria-describedby=\"my-helper-text\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={this.handleChange}\r\n              value={name}\r\n            />\r\n          </InputLabel>\r\n\r\n          <InputLabel htmlFor=\"number\">\r\n            Number\r\n            <Input\r\n              id=\"number\"\r\n              aria-describedby=\"my-helper-text\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={this.handleChange}\r\n              value={number}\r\n            />\r\n          </InputLabel>\r\n          <Button\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n          >\r\n            Add contacts\r\n          </Button>\r\n        </FormGroup>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  contacts: selectors.getAllItems(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (name, number) => dispatch(formOperations.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { AccessAlarm, ThreeDRotation } from \"@material-ui/icons\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport formOperations from \"../../redux/form/form-operations\";\r\nimport selectors from \"../../redux/form/contacts-selectors\";\r\nimport \"./ContactList.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginBottom: 10,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    textAlign: \"left\",\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <Card key={id} className={classes.root}>\r\n          <CardContent>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"body1\"\r\n              component=\"p\"\r\n              className={classes.title}\r\n            >\r\n              {name}\r\n            </Typography>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"body1\"\r\n              component=\"p\"\r\n              className={classes.title}\r\n            >\r\n              {number}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => onDelete(id)}\r\n            >\r\n              <DeleteIcon />\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n        // <li className=\"contact-item\" key={id}>\r\n        //   <span className=\"contact-data-name\">{name}:</span>\r\n        //   <span className=\"contact-data-number\">{number}</span>\r\n\r\n        //   <button\r\n        //     className=\"delete__btn\"\r\n        //     onClick={() => onDelete(id)}\r\n        //     type=\"button\"\r\n        //   >\r\n        //     Delete\r\n        //   </button>\r\n        // </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  onDelete: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  contacts: selectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDelete: (id) => dispatch(formOperations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport formActions from \"../../redux/form/form-actions\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport \"./Filter.css\";\r\nimport selectors from \"../../redux/form/contacts-selectors\";\r\n\r\nconst Filter = ({ onChange, value }) => {\r\n  return (\r\n    <div>\r\n      <h3> Find contact dy name </h3>\r\n      <form noValidate autoComplete=\"off\">\r\n        <FormGroup>\r\n          <InputLabel htmlFor=\"Filter contacts by name\">\r\n            <Input\r\n              id=\"filter\"\r\n              label=\"Find contact\"\r\n              aria-describedby=\"my-helper-text\"\r\n              type=\"text\"\r\n              name=\"filter\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              onChange={onChange}\r\n              value={value}\r\n            />\r\n          </InputLabel>\r\n        </FormGroup>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: selectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(formActions.addFilter(e.target.value)),\r\n});\r\n\r\nFilter.propTypes = {\r\n  handleOnChange: PropTypes.func,\r\n  value: PropTypes.string.isRequired,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport formOperations from \"../redux/form/form-operations\";\r\nimport formActions from \"../redux/form/form-actions\";\r\n\r\nimport Section from \"../Components/Section\";\r\nimport Form from \"../Components/Form\";\r\nimport ContactList from \"../Components/ContactList\";\r\nimport Filter from \"../Components/Filter\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nclass ContactsView extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Section>\r\n          <div className=\"container\">\r\n            <h1>Phonebook</h1>\r\n            <Form />\r\n          </div>\r\n          <div className=\"container\">\r\n            <h2>Contacts</h2>\r\n            <Filter />\r\n          </div>\r\n\r\n          <ContactList />\r\n        </Section>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (filter) => dispatch(formActions.addFilter(filter)),\r\n  fetchContacts: () => dispatch(formOperations.fetchContacts()),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ContactsView);\r\n"],"sourceRoot":""}