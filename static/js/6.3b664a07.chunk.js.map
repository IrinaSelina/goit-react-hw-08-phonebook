{"version":3,"sources":["views/RegisterView.js"],"names":["RegisterView","state","name","email","password","reset","setState","handleChange","e","currentTarget","value","handleSubmit","preventDefault","props","onRegister","this","onSubmit","autoComplete","type","onChange","Component","mapDispatchToProps","operations","register","connect"],"mappings":"8NAGMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAEZC,MAAQ,WACN,EAAKC,SAAS,CACZJ,KAAM,GACNC,MAAO,GACPC,SAAU,M,EAGdG,aAAe,SAACC,GACd,EAAKF,SAAL,eACGE,EAAEC,cAAcP,KAAOM,EAAEC,cAAcC,S,EAG5CC,aAAe,SAACH,GACdA,EAAEI,iBACF,EAAKC,MAAMC,WAAW,EAAKb,OAC3B,EAAKI,S,4CAEP,WACE,MAAkCU,KAAKd,MAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SACrB,OACE,gCACE,qJAEA,uBAAMY,SAAUD,KAAKJ,aAAcM,aAAa,MAAhD,UACE,uDAEE,uBACEC,KAAK,OACLhB,KAAK,OACLQ,MAAOR,EACPiB,SAAUJ,KAAKR,kBAInB,mEAEE,uBACEW,KAAK,QACLhB,KAAK,QACLQ,MAAOP,EACPgB,SAAUJ,KAAKR,kBAInB,yEAEE,uBACEW,KAAK,WACLhB,KAAK,WACLQ,MAAON,EACPe,SAAUJ,KAAKR,kBAInB,wBAAQW,KAAK,SAAb,oI,GA5DiBE,aAkErBC,EAAqB,CACzBP,WAAYQ,IAAWC,UAMVC,sBAAQ,KAAMH,EAAdG,CAAkCxB","file":"static/js/6.3b664a07.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport operations from \"../redux/auth/auth-operations\";\r\nclass RegisterView extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.currentTarget.name]: e.currentTarget.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onRegister(this.state);\r\n    this.reset();\r\n  };\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Страница регистрации</h1>\r\n\r\n        <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n          <label>\r\n            Имя\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Почта\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Пароль\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\">Зарегистрироваться</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  onRegister: operations.register,\r\n};\r\n// const mapDispatchToProps = (disatch) => ({\r\n//   onRegister: (data) => disatch(operations.register(data)),\r\n// });\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterView);\r\n"],"sourceRoot":""}